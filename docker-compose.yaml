version: '3.7'

# Define services
services:
  # Payday IAM backend service
  payday-iam-api:
    # Configuration for building the docker image for the backend service
    image : payday-iam-api:v1.0
    ports:
      - "8081:8080" # Forward the exposed port 8080 on the container to port 8080 on the host machine
    restart: always
    depends_on: 
      - payday-db # This service depends on mysql. Start that first.
    environment: # Pass environment variables to the service
      SPRING_DATASOURCE_URL: jdbc:mysql://payday-db:3306/payday?useSSL=false&serverTimezone=UTC&useLegacyDatetimeCode=false
      SPRING_DATASOURCE_USERNAME: payday
      SPRING_DATASOURCE_PASSWORD: payday     
    networks: # Networks to join (Services on the same network can communicate with each other using their name)
      - backend

  # Database Service (Mysql)
  payday-db:
    image: mysql:5.7
    ports:
      - "3336:3306"
    restart: always
    environment:
      MYSQL_DATABASE: payday    
      MYSQL_USER: payday
      MYSQL_PASSWORD: payday
      MYSQL_ROOT_PASSWORD: root
    volumes:
      - db-data:/var/lib/mysql
    networks:
      - backend  
  
  # Payday Account backend service
  payday-account-api:
    # Configuration for building the docker image for the backend service
    image : payday-account-api:v1.0
    ports:
      - "8082:8080" # Forward the exposed port 8080 on the container to port 8080 on the host machine
    restart: always
    depends_on: 
      - payday-db # This service depends on mysql. Start that first.
    environment: # Pass environment variables to the service
      SPRING_DATASOURCE_URL: jdbc:mysql://payday-db:3306/payday?useSSL=false&serverTimezone=UTC&useLegacyDatetimeCode=false
      SPRING_DATASOURCE_USERNAME: payday
      SPRING_DATASOURCE_PASSWORD: payday     
    networks: # Networks to join (Services on the same network can communicate with each other using their name)
      - backend

  
# Volumes
volumes:
  db-data:  
  
# Networks to be created to facilitate communication between containers
networks:
  backend:
